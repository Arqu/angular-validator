angular.module("angularValidator",[]),angular.module("angularValidator").directive("angularValidator",["$injector","$parse",function(a,e){return{restrict:"A",link:function(t,n,r,i){function l(e){return e&&"invalid-message"in e.attributes?a.get(e.attributes["invalid-message"].value):!1}function u(a){for(var e=l(a),t=0;t<a.length;t++)t in a&&o(a[t],e)}function o(a,e){"validate-on"in a.attributes&&"blur"===a.attributes["validate-on"].value&&angular.element(a).on("blur",function(){f(a,e),g(a)}),"validator-async"in a.attributes&&"function"!=typeof V[a.name].$asyncValidators.callback&&(V[a.name].$asyncValidators.callback=t.$eval(a.attributes["validator-async"].value));var n=t.$watch(function(){return a.value+a.required+V.submitted+m(a)+s(V[a.name])+d(V[a.name])},function(){if(V.submitted)f(a,e),g(a);else{var t="validate-on"in a.attributes&&"dirty"===a.attributes["validate-on"].value;t?(f(a,e),g(a)):V[a.name]&&V[a.name].$pristine&&(f(a,e),g(a))}});p.push(n)}function s(a){return a&&"$dirty"in a?a.$dirty:void 0}function d(a){return a&&"$valid"in a?a.$valid:void 0}function m(a){if("validator"in a.attributes){var e=t.$eval(a.attributes.validator.value);return V[a.name].$setValidity("angularValidator",e),e}}function f(a,e){var n=function(){return"<i class='fa fa-times'></i> Required"},r=function(){return"<i class='fa fa-times'></i> Invalid"};if(a.name in V){var i=V[a.name],l=v(a);l&&l.remove(),(i.$dirty||t[a.form.name]&&t[a.form.name].submitted)&&(i.$error.required?"required-message"in a.attributes?angular.element(a).after(c(a.attributes["required-message"].value)):angular.element(a).after(c(n)):i.$valid||("invalid-message"in a.attributes?angular.element(a).after(c(a.attributes["invalid-message"].value)):e?angular.element(a).after(c(e.message(i,a))):angular.element(a).after(c(r))))}}function c(a){return"<label class='control-label has-error validationMessage'>"+t.$eval(a)+"</label>"}function v(a){for(var e=angular.element(a).parent().children(),t=0;t<e.length;t++)if(angular.element(e[t]).hasClass("validationMessage"))return angular.element(e[t]);return!1}function g(a){if(a.name in V){var e=V[a.name];angular.element(a).removeClass("has-error"),angular.element(a.parentNode).removeClass("has-error"),(e.$dirty||V.submitted)&&e.$invalid&&(angular.element(a.parentNode).addClass("has-error"),angular.element(a).addClass("has-error"))}}var b=function(){return Math.floor(1e5*Math.random())},y=!1;if(angular.forEach(n.find("input,select,textarea"),function(a){a=$(a),a.attr("name")||(a.attr("name",b()),console.log("WARNING! AngularValidator -> One of your form elements(<input>, <textarea>, <select>) is missing a name. We got your back and added a name, but if you want a pretty one you should add it yourself."),y=!0)}),r.name||(n.attr("name","TGAV_FORM_"+b()),console.log("WARNING! AngularValidator -> Your form element(<form>) is missing a name. We got your back and added a name, but if you want a pretty one you should add it yourself."),y=!0),y)return void $compile(n)(t);var h=angular.element(n)[0],p=[],V=e(r.name)(t);V.submitted=!1,t.$watch(function(){return Object.keys(V).length},function(){angular.forEach(p,function(a){a()}),u(h)}),n.on("submit",function(a){a.preventDefault(),t.$apply(function(){V.submitted=!0}),V.$valid&&t.$apply(function(){t.$eval(r["angular-validator-submit"])})}),V.reset=function(){angular.forEach(h,function(a){a.name&&(V[a.name].$setViewValue(""),V[a.name].$render())}),V.submitted=!1,V.$setPristine()},u(h)}}}]);